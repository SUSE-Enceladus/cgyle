#!/bin/bash
# push container images from a registry to an ECR

set -e

function usage {
    echo "suse2ecr --aws-ecr <url> --filter-policy <file>"
    echo "  [--public]"
    echo "     push to public ECR"
    echo "  [--aws-profile <name>]"
    echo "     aws config profile name"
    echo "  [--dry-run]"
    echo "     apply filter policy only and print list of matches"
    exit 1
}

ARGUMENT_LIST=(
    "aws-profile:"
    "aws-ecr:"
    "filter-policy:"
    "dry-run"
    "public"
)

# read arguments
if ! opts=$(getopt \
    --longoptions "$(printf "%s," "${ARGUMENT_LIST[@]}")" \
    --name "$(basename "$0")" \
    --options "" \
    -- "$@"
); then
    usage
fi

eval set --"${opts}"

while [[ $# -gt 0 ]]; do
    case "$1" in
        --aws-profile)
            argAWSProfile=$2
            shift 2
            ;;

        --aws-ecr)
            argAWSECR=$2
            shift 2
            ;;

        --filter-policy)
            argFilterPolicy=$2
            shift 2
            ;;

        --dry-run)
            argDryRun=1
            shift
            ;;

        --public)
            argPublic=1
            shift
            ;;

        *)
            break
            ;;
    esac
done

if [ ! "${argAWSECR}" ] || \
   [ ! "${argFilterPolicy}" ];then
    usage
fi

registry=https://registry.suse.com
profile=${argAWSProfile}
push_registry=${argAWSECR}
filter=${argFilterPolicy}
ecr="ecr"
if [ "${argPublic}" ];then
    ecr="ecr-public"
fi

if [ -n "${profile}" ];then
    aws_ecr="aws ${ecr} --profile ${profile}"
else
    aws_ecr="aws ${ecr}"
fi

# Get credentials
push_creds=$(
    ${aws_ecr} get-login-password
)

# Create repos on the remote ECR
cgyle \
    --updatecache "${registry}" --from "${registry}" \
    --filter-policy "${filter}" \
2>&1 | grep -v INFO:Proxy: | cut -f2- -d- | while read -r repo; do
    echo "${repo}"
    if [ ! "${argDryRun}" ];then
        ${aws_ecr} describe-repositories \
            --repository-names "${repo}" &> /dev/null || \
        ${aws_ecr} create-repository \
            --repository-name "${repo}"
    fi
done

# Push images to repos on the remote ECR
if [ ! "${argDryRun}" ];then
    cgyle \
        --updatecache "${registry}" --from "${registry}" \
        --push-oci "${push_registry}" \
        --push-oci-creds=AWS:"${push_creds}" \
        --filter-policy "${filter}" \
        --with-attestation \
        --apply
fi
